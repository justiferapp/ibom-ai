
import React from 'react';
import type { GeneratedImage } from '../types';
import { DownloadIcon, EyeIcon, ShareIcon, EditIcon } from './icons';

interface ImageCardProps {
  image: GeneratedImage;
  onView: (src: string) => void;
  onNewPrompt: (image: GeneratedImage) => void;
}

const ImageCard: React.FC<ImageCardProps> = ({ image, onView, onNewPrompt }) => {

  const handleDownload = () => {
    const link = document.createElement('a');
    link.href = image.src;
    link.download = `ibom-ai-product-image-${image.id}.png`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  const handleShare = async () => {
    if (navigator.share) {
      try {
        const response = await fetch(image.src);
        const blob = await response.blob();
        const file = new File([blob], `ibom-ai-product-image-${image.id}.png`, { type: 'image/png' });

        await navigator.share({
          title: 'AI Generated Product Image',
          text: 'Check out this product image generated by Ibom AI!',
          files: [file],
        });
      } catch (error) {
        console.error('Error sharing:', error);
        alert('Could not share image.');
      }
    } else {
      alert('Web Share API is not supported in your browser.');
    }
  };

  return (
    <div className="relative group overflow-hidden rounded-lg aspect-square">
      <img src={image.src} alt={`Generated product shot ${image.id}`} className="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105" />
      <div className="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-60 transition-all duration-300 flex items-center justify-center">
        <div className="flex items-center space-x-3 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
          <button onClick={() => onView(image.src)} className="p-3 bg-white/10 rounded-full text-white hover:bg-white/20 backdrop-blur-sm transition-colors">
            <EyeIcon className="w-5 h-5" />
          </button>
          <button onClick={handleDownload} className="p-3 bg-white/10 rounded-full text-white hover:bg-white/20 backdrop-blur-sm transition-colors">
            <DownloadIcon className="w-5 h-5" />
          </button>
           <button onClick={handleShare} className="p-3 bg-white/10 rounded-full text-white hover:bg-white/20 backdrop-blur-sm transition-colors">
            <ShareIcon className="w-5 h-5" />
          </button>
           <button onClick={() => onNewPrompt(image)} className="p-3 bg-white/10 rounded-full text-white hover:bg-white/20 backdrop-blur-sm transition-colors">
            <EditIcon className="w-5 h-5" />
          </button>
        </div>
      </div>
    </div>
  );
};

export default ImageCard;
